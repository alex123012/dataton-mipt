settings:
  app:
    port: 8000
    domain: dataton-mipt.alignfig.com

global:
  _includes:
    apps-defaults:
      enabled: true

    redis-conn-str:
      containers:
        app:
          secretEnvVars:
            REDIS_URL: 'redis://:{{ (index (index $.Values "apps-secrets") "redis-secret").data.REDIS_PASSWORD | list $ . | include "fl.value" }}@{{ printf "%s-master" (include "common.names.fullname" (dict "Chart" .Chart "Template" .Template "Values" $.Values.redis)) }}:6379'
    postgres-conn-str:
      containers:
        app:
          secretEnvVars:
            DATABASE_URL: 'postgresql://{{ $.Values.postgresql.auth.username }}:{{(index (index $.Values "apps-secrets") "postgres-secret").data.USER_PASSWORD | list $ . | include "fl.value" }}@{{ include "postgresql.v1.primary.fullname" (dict "Chart" .Chart "Template" .Template "Values" $.Values.postgresql) }}:5432/{{ $.Values.postgresql.auth.database }}'

    apps-stateless-app:
      _include:
        - "apps-defaults"
      replicas: 1
      annotations: |
        kubectl.kubernetes.io/default-container: app
      securityContext: |
        runAsNonRoot: true
        runAsUser: 65534
        runAsGroup: 65534
      containers:
        app:
          image:
            name: "app"
            generateSignatureBasedTag: true
          securityContext: |
            allowPrivilegeEscalation: false

apps-stateless:
  app:
    _include:
      - apps-stateless-app
      - redis-conn-str
      - postgres-conn-str
    containers:
      app:
        command: |
          - uvicorn
          - app:app
        ports: |
          - name: http
            containerPort: {{ $.Values.settings.app.port | list $ . | include "fl.value" }}
        resources:
          limits:
            memoryMb: 512
          requests:
            memoryMb: 512
            mcpu: 500
        secretEnvVars:
          GITHUB_CLIENT_ID: '{{ $.Values.settings.github.client_id | list $ . | include "fl.value" }}'
          GITHUB_CLIENT_SECRET: '{{ $.Values.settings.github.client_secret | list $ . | include "fl.value" }}'
          GITHUB_ACCESS_TOKEN_URL: "https://github.com/login/oauth/access_token"
          GITHUB_AUTHORIZE_URL: "https://github.com/login/oauth/authorize"
          GITHUB_API_BASE_URL: "https://api.github.com/"
          SITE_URL: 'https://{{ $.Values.settings.app.domain | list $ . | include "fl.value" }}'
          SMTP_PASSWORD: '{{ $.Values.settings.smtp.password | list $ . | include "fl.value" }}'
    service:
      enabled: true
      ports: |
        - name: http
          port: {{ $.Values.settings.app.port | list $ . | include "fl.value" }}

  beat:
    _include:
      - apps-stateless-app
      - redis-conn-str
    containers:
      app:
        command: |
          - celery
          - --app=tasks
          - beat
          - --loglevel=DEBUG
          - --scheduler=redbeat.RedBeatScheduler
        resources:
          limits:
            memoryMb: 256
          requests:
            memoryMb: 256
            mcpu: 100

  worker:
    _include:
      - apps-stateless-app
      - redis-conn-str
      - postgres-conn-str
    containers:
      app:
        command: |
          - celery
          - --app=tasks
          - worker
          - --loglevel=DEBUG
        resources:
          limits:
            memoryMb: 2048
          requests:
            memoryMb: 2048
            mcpu: 500

postgresql:
  fullnameOverride: postgres
  # image:
  #   registry: "" # don't fill
  #   repository: ""
  #   tag: ""
  #   pullSecrets:
  #     - name: registrysecret
  auth:
    postgresPassword: ""
    username: "app"
    database: "app"
    existingSecret: "postgres-secret"
    secretKeys:
      adminPasswordKey: ADMIN_PASSWORD
      userPasswordKey: USER_PASSWORD
  primary:
    persistence:
      size: 4Gi
      storageClass: linstor-data-sdb-r1

redis:
  architecture: standalone
  fullnameOverride: redis
  # image:
  #   registry: "" # don't fill
  #   repository: ""
  #   tag: ""
  #   pullSecrets:
  #     - name: registrysecret
  auth:
    enabled: true
    existingSecret: "redis-secret"
    existingSecretPasswordKey: "REDIS_PASSWORD"
  master:
    persistence:
      size: 2Gi
      storageClass: linstor-data-sdb-r1
  serviceAccount:
    create: false

apps-ingresses:
  api:
    _include: ["apps-defaults"]
    enabled: true
    class: "nginx"
    host: '{{ $.Values.settings.app.domain | list $ . | include "fl.value" }}'
    annotations: |
      nginx.ingress.kubernetes.io/cors-allow-credentials: "true"
      nginx.ingress.kubernetes.io/cors-allow-methods: PUT, GET, POST, OPTIONS, DELETE
      nginx.ingress.kubernetes.io/cors-allow-origin: {{ $.Values.settings.app.domain | list $ . | include "fl.value" }}
      nginx.ingress.kubernetes.io/enable-cors: "true"
    paths: |
      - path: /
        pathType: Prefix
        backend:
          service:
            name: "{{ $.CurrentApp.name }}"
            port:
              number: {{ $.Values.settings.app.port | list $ . | include "fl.value" }}
    tls:
      enabled: true
      secret_name: "app-tls"
apps-certificates:
  app-tls:
    _include: ["apps-defaults"]
    host: '{{ $.Values.settings.app.domain | list $ . | include "fl.value" }}'
